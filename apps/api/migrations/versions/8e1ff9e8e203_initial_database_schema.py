"""Initial database schema

Revision ID: 8e1ff9e8e203
Revises: 
Create Date: 2025-09-27 15:27:13.186666

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8e1ff9e8e203'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('wechat_openid', sa.String(length=100), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('subscription_tier', sa.Enum('FREE', 'STANDARD', 'PREMIUM', 'FAMILY', name='subscription_tiers'), nullable=True),
    sa.Column('subscription_expires_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    op.create_index(op.f('ix_users_wechat_openid'), 'users', ['wechat_openid'], unique=True)
    op.create_table('children_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('nickname', sa.String(length=100), nullable=True),
    sa.Column('birthday', sa.Date(), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', 'PREFER_NOT_SAY', name='genders'), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('neuro_profile', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('developmental_milestones', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('attention_span_baseline', sa.Integer(), nullable=True),
    sa.Column('reading_level', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('series_bibles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('characters', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('world_settings', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('narrative_rules', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('visual_style', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('lora_models', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('visual_assets', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reading_achievements',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('child_id', sa.UUID(), nullable=False),
    sa.Column('achievement_type', sa.String(length=50), nullable=False),
    sa.Column('achievement_value', sa.Integer(), nullable=True),
    sa.Column('achieved_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('reward_claimed', sa.Boolean(), nullable=True),
    sa.Column('achievement_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['children_profiles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('child_id', sa.UUID(), nullable=False),
    sa.Column('series_bible_id', sa.UUID(), nullable=True),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('theme', sa.String(length=100), nullable=True),
    sa.Column('age_group', sa.String(length=20), nullable=True),
    sa.Column('content', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('generation_type', sa.Enum('PREPRODUCED', 'TEMPLATE', 'REALTIME', name='generation_types'), nullable=True),
    sa.Column('status', sa.Enum('GENERATING', 'READY', 'FAILED', name='story_statuses'), nullable=True),
    sa.Column('reading_time', sa.Integer(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('illustrations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('interaction_points', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('safety_score', sa.Float(), nullable=True),
    sa.Column('educational_value_score', sa.Float(), nullable=True),
    sa.Column('story_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['children_profiles.id'], ),
    sa.ForeignKeyConstraint(['series_bible_id'], ['series_bibles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reading_sessions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('story_id', sa.UUID(), nullable=False),
    sa.Column('child_id', sa.UUID(), nullable=False),
    sa.Column('started_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('completed_at', sa.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('progress', sa.Float(), nullable=True),
    sa.Column('interaction_responses', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('device_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('vocabulary_learned', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('comprehension_score', sa.Float(), nullable=True),
    sa.Column('engagement_metrics', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['child_id'], ['children_profiles.id'], ),
    sa.ForeignKeyConstraint(['story_id'], ['stories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('reading_sessions')
    op.drop_table('stories')
    op.drop_table('reading_achievements')
    op.drop_table('series_bibles')
    op.drop_table('children_profiles')
    op.drop_index(op.f('ix_users_wechat_openid'), table_name='users')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
